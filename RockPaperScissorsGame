import random

class Game:
    def __init__(self) -> None:
        # Call the get_computer_pick() method
        self.computer_pick = self.get_computer_pick()
        self.user_pick = self.get_user_pick()
        self.result = self.get_result()
    
    def get_computer_pick(self):
        # Get random number among 1, 2 and 3
        random_number = random.randint(1,3)

        # Possible options stored in dictionary
        options = {1: 'rock', 2: 'paper', 3: 'scissors'}

        # Returns the value present at random_number
        return options[random_number]

    def get_user_pick(self):
        while True:
            user_pick = str(input("Pick rock/paper/scissors: "))
            user_pick = user_pick.lower()
        
            if user_pick in ('rock', 'paper','scissors'):
                break
            else:
                print('Incorrect input!')

        return user_pick
    
    def get_result(self):

        if self.computer_pick == self.user_pick:
            return 'draw'
        
        elif self.user_pick == 'paper' and self.computer_pick == 'rock':
            return 'win'
        
        elif self.user_pick == 'rock' and self.computer_pick == 'scissors':
            return 'win'
        
        elif self.user_pick == 'scissors' and self.computer_pick == 'paper':
            return 'win'
        
        else:
            return 'lose'
    
    def print_results(self):
        print(f'Computer picks: {self.computer_pick}')
        print(f'Your pick: {self.user_pick}')
        print(f'You {self.result}')

# Will run the game 5 times before terminating
for i in range(5):
     game = Game()
     game.print_results()


# Will run the game as long as the user wants to, must input y to continue, n to quit, includes exception handling
while True:
    game = Game()
    game.print_results()

    play_again = input('Do you want to play again? (y/n): ')
    choice = play_again.lower()

    if choice == 'n':
        break
    elif choice == 'y':
        continue
    else:
        print('Incorrect input')
